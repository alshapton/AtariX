
             processor 6502               ; the assembler is 6502, since this assembler
                                          ; can assemble code for many processors.

             include "vcs.h"

             include "macro.h"

;SYMBOL TABLE
WHITE        EQU $0E                  ; ccolour white
PLAYFIELD_B  EQU $FF                  ; Bottom of playfield
PLAYFIELD_L  EQU 128		      ; Left/Right side of playfield


; Scan Symbols

SCAN_LINES   EQU 192                  ; Number of scan Lines
BOTTOM_WIDTH EQU  		      ; Number of scan lines of the bottom of the playfield
OVERSCAN     EQU 30                   ; Value of overscan (bottom of screen)
             
             
             SEG
             ORG $F000                    ; memory address to start placing code

Reset

;===============================   
; Initialising Memory ON STARTUP
;===============================

   ; * Clears all variables and stack
   ; * Initialises the stack pointer
   ; * Also clears the stack registers by "wrapping" the stack (unusual technique)
   
             ldx #0
             txa
Clear        dex
             txs
             pha
             bne Clear
            
;======================================
; End of Initialising Memory ON STARTUP
;======================================

;-------------------------------------
; test code for drawing base playfield

             lda #PLAYFIELD_L ; left hand byte of playfield
             sta PF1	     ; store in PF1 register
             lda #$0E        ; make playfield colour white - NTSC - $0E
             sta COLUPF      ; store in playfield colour register
             lda #1          ; 
             sta CTRLPF

;-------------------------------------

StartOfFrame

   ; Start of vertical blank processing

             lda #0
             sta VBLANK

             lda #2
             sta VSYNC      ; Vertical SYNC - indicates start of a new frame
                            ; byte 2 being set indicates start of vertical sync

             ; 3 scanlines of VSYNCH signal... - these are at the top of the screen
             ; Note that WSYNC is a 'strobe' register - meaning that ANY value > 0 
             ; will suffice. to trigger the stopping of the 6502
             sta WSYNC ; halt the 6502 till the TIA finishes the scan line then
             sta WSYNC ; reactivates the 6502 only to be told to shut off again
             sta WSYNC ; for the 3rd blank scan line. 
             
             lda #0
             sta VSYNC      ; Vertical SYNC 
                            ; All bytes being 0 indicates end of vertical sync           
;==========================================           
; Start of 37 scan lines 

	     ldx #37        ; This is the 37 scan lines at the top of the screen
vblankscan   sta WSYNC      ; Wait for the TIA to tell the 6502 that the scanline 
	     dex	    ; has complete and processing can start again.
             bne vblankscan

; +========================================+
; |               BEGIN KERNEL             |
; +========================================+

; 192 scanlines of picture..

	     ldx #203     ; X-register - number of scan lines
screenLoop  
             dex

	     ;iny
             ;sty COLUBK                     ; TIA Register for background colour
             sta WSYNC                      ; Scanline Sync (6502 - TIA - 6502 Off)
	     bne screenLoop
             
             
	     lda #PLAYFIELD_B; left hand byte of playfield (bottom)
             sta PF1         ; (dont forget - still using reflected playfield)
             sta PF2


	     ldx #8          ; 8 lines to draw for the bottom of the screen                          
Bottom8Lines dex
             sta WSYNC
	     bne Bottom8Lines
	     
             
; prepare for next scan line
             lda #PLAYFIELD_L	     ; left hand byte of playfield
	     sta PF1 		     ; place standard size of left side back in the PF register
             lda #0                  ; Blank out middle playfield
             sta PF2                 ; by zero-ing PF2
	             
; +========================================+
; |               END KERNEL               |
; +========================================+

             lda #%0100001                  ; This is where the input ports are read
             sta VBLANK                     ; (and the scan beam switched off)
            
;==========================================

; 30 scanlines of overscan... - the bottom overscan (loop 30 times)
	     ldx #OVERSCAN
voverscan    sta WSYNC                      ; usual horizontal scan line sync
	     dex
             bne voverscan
            
;==========================================
             jmp StartOfFrame


             ORG $FFFA		 ; the 6502 looks at the address $FFFA to determine
                                 ; the address that it should start running code.
                                 ; therefore the 3 labels below (Reset is a label 
                                 ; which equals $F000, the execution will start there
            
            .word Reset          ; NMI
            .word Reset          ; RESET
            .word Reset          ; IRQ
            
    	    END
